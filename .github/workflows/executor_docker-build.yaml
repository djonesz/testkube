name: Docker images building and pushing for executors
on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+-*"

jobs:
    single_executor:
      strategy:
        matrix:
          executor: [artillery, curl, example, ginkgo, k6, kubepug, postman, soapui, init, scraper, template ]

      runs-on: ubuntu-latest
      steps:

        -
          name: Checkout
          uses: actions/checkout@v2

        -
          name: Set up QEMU
          uses: docker/setup-qemu-action@v1

        -
          name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v1

        -
          name: Go Cache
          uses: actions/cache@v2
          with:
            path: |
              ~/go/pkg/mod
              ~/.cache/go-build
            key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
            restore-keys: |
              ${{ runner.os }}-go-

        -
          name: Docker Cache
          uses: actions/cache@v2
          with:
            path: /tmp/.buildx-cache
            key: ${{ runner.os }}-buildx-${{ github.sha }}
            restore-keys: |
              ${{ runner.os }}-buildx-

        -
          name: Login to DockerHub
          uses: docker/login-action@v1
          with:
            username: ${{ secrets.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_TOKEN }}

        - name: Release
          uses: goreleaser/goreleaser-action@v4
          with:
            distribution: goreleaser
            version: latest
            args: release -f goreleaser_files/.goreleaser-docker-build-executor.yml
          env:
            GITHUB_TOKEN: ${{ secrets.CI_BOT_TOKEN }}
            EXECUTOR: ${{ matrix.executor }}

    executor_jmeter:
      runs-on: ubuntu-latest
      steps:

        -
          name: Checkout
          uses: actions/checkout@v2

        -
          name: Set up QEMU
          uses: docker/setup-qemu-action@v1

        -
          name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v1

        -
          name: Go Cache
          uses: actions/cache@v2
          with:
            path: |
              ~/go/pkg/mod
              ~/.cache/go-build
            key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
            restore-keys: |
              ${{ runner.os }}-go-

        -
          name: Docker Cache
          uses: actions/cache@v2
          with:
            path: /tmp/.buildx-cache
            key: ${{ runner.os }}-buildx-${{ github.sha }}
            restore-keys: |
              ${{ runner.os }}-buildx-

        -
          name: Login to DockerHub
          uses: docker/login-action@v1
          with:
            username: ${{ secrets.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_TOKEN }}

        - name: Release
          uses: goreleaser/goreleaser-action@v4
          with:
            distribution: goreleaser
            version: latest
            args: release -f goreleaser_files/.goreleaser-docker-build-executor-jmeter.yml
          env:
            GITHUB_TOKEN: ${{ secrets.CI_BOT_TOKEN }}

    executor_maven:
      runs-on: ubuntu-latest
      steps:

        -
          name: Checkout
          uses: actions/checkout@v2

        -
          name: Set up QEMU
          uses: docker/setup-qemu-action@v1

        -
          name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v1

        -
          name: Go Cache
          uses: actions/cache@v2
          with:
            path: |
              ~/go/pkg/mod
              ~/.cache/go-build
            key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
            restore-keys: |
              ${{ runner.os }}-go-

        -
          name: Docker Cache
          uses: actions/cache@v2
          with:
            path: /tmp/.buildx-cache
            key: ${{ runner.os }}-buildx-${{ github.sha }}
            restore-keys: |
              ${{ runner.os }}-buildx-

        -
          name: Login to DockerHub
          uses: docker/login-action@v1
          with:
            username: ${{ secrets.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_TOKEN }}

        - name: Release
          uses: goreleaser/goreleaser-action@v4
          with:
            distribution: goreleaser
            version: latest
            args: release -f goreleaser_files/.goreleaser-docker-build-executor-maven.yml
          env:
            GITHUB_TOKEN: ${{ secrets.CI_BOT_TOKEN }}

    executor_gradle:
      runs-on: ubuntu-latest
      steps:

        -
          name: Checkout
          uses: actions/checkout@v2

        -
          name: Set up QEMU
          uses: docker/setup-qemu-action@v1

        -
          name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v1

        -
          name: Go Cache
          uses: actions/cache@v2
          with:
            path: |
              ~/go/pkg/mod
              ~/.cache/go-build
            key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
            restore-keys: |
              ${{ runner.os }}-go-

        -
          name: Docker Cache
          uses: actions/cache@v2
          with:
            path: /tmp/.buildx-cache
            key: ${{ runner.os }}-buildx-${{ github.sha }}
            restore-keys: |
              ${{ runner.os }}-buildx-

        -
          name: Login to DockerHub
          uses: docker/login-action@v1
          with:
            username: ${{ secrets.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_TOKEN }}

        - name: Release
          uses: goreleaser/goreleaser-action@v4
          with:
            distribution: goreleaser
            version: latest
            args: release -f goreleaser_files/.goreleaser-docker-build-executor-gradle.yml
          env:
            GITHUB_TOKEN: ${{ secrets.CI_BOT_TOKEN }}

    executor_cypress:
      strategy:
        matrix:
          version: [ cypress8, cypress9, cypress10, cypress11, yarn, npm ]

      runs-on: ubuntu-latest
      steps:

        -
          name: Checkout
          uses: actions/checkout@v2

        -
          name: Set up QEMU
          uses: docker/setup-qemu-action@v1

        -
          name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v1

        -
          name: Go Cache
          uses: actions/cache@v2
          with:
            path: |
              ~/go/pkg/mod
              ~/.cache/go-build
            key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
            restore-keys: |
              ${{ runner.os }}-go-

        -
          name: Docker Cache
          uses: actions/cache@v2
          with:
            path: /tmp/.buildx-cache
            key: ${{ runner.os }}-buildx-${{ github.sha }}
            restore-keys: |
              ${{ runner.os }}-buildx-

        -
          name: Login to DockerHub
          uses: docker/login-action@v1
          with:
            username: ${{ secrets.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_TOKEN }}

        - name: Get tag
          id: tag
          uses: dawidd6/action-get-tag@v1
          with:
            # Optionally strip `v` prefix
            strip_v: true

        - name: Use tag
          run: echo ${{steps.tag.outputs.tag}}

        - name: Release
          uses: goreleaser/goreleaser-action@v4
          with:
            distribution: goreleaser
            version: latest
            args: release -f goreleaser_files/.goreleaser-docker-build-executor-cypress.yml --snapshot
          env:
            GITHUB_TOKEN: ${{ secrets.CI_BOT_TOKEN }}
            EXECUTOR_VERSION: ${{ matrix.version }}

        - name: Push multi-arch image to the Registry
          run: |
            docker push kubeshop/testkube-cypress-executor:${{ steps.tag.outputs.tag }}-${{ matrix.version }}-amd64
            docker push kubeshop/testkube-cypress-executor:${{ steps.tag.outputs.tag }}-${{ matrix.version }}-arm64v8


    executor_cypress_manifest:
      needs: executor_cypress
      strategy:
        matrix:
          version: [ cypress8, cypress9, cypress10, cypress11, yarn, npm ]

      runs-on: ubuntu-latest
      steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      -  name: Login to DockerHub
         uses: docker/login-action@v1
         with:
           username: ${{ secrets.DOCKERHUB_USERNAME }}
           password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Get tag
        id: tag
        uses: dawidd6/action-get-tag@v1
        with:
          strip_v: true

      - name: Use tag
        run: echo ${{steps.tag.outputs.tag}}

      - name: Create manifests
        run: |
          docker manifest create kubeshop/testkube-cypress-executor:${{ steps.tag.outputs.tag }}-${{ matrix.version }} --amend kubeshop/testkube-cypress-executor:${{ steps.tag.outputs.tag }}-${{ matrix.version }}-amd64 --amend kubeshop/testkube-cypress-executor:${{ steps.tag.outputs.tag }}-${{ matrix.version }}-arm64v8
          docker manifest push -p kubeshop/testkube-cypress-executor:${{ steps.tag.outputs.tag }}-${{ matrix.version }}

          docker manifest create kubeshop/testkube-cypress-executor:${{ matrix.version }} --amend kubeshop/testkube-cypress-executor:${{ steps.tag.outputs.tag }}-${{ matrix.version }}-amd64 --amend kubeshop/testkube-cypress-executor:${{ steps.tag.outputs.tag }}-${{ matrix.version }}-arm64v8
          docker manifest push -p kubeshop/testkube-cypress-executor:${{ matrix.version }}

          docker manifest create kubeshop/testkube-cypress-executor:${{ steps.tag.outputs.tag }} --amend kubeshop/testkube-cypress-executor:${{ steps.tag.outputs.tag }}-cypress11-amd64 --amend kubeshop/testkube-cypress-executor:${{ steps.tag.outputs.tag }}-cypress11-arm64v8
          docker manifest push -p kubeshop/testkube-cypress-executor:${{ steps.tag.outputs.tag }}

          docker manifest create kubeshop/testkube-cypress-executor:latest --amend kubeshop/testkube-cypress-executor:${{ steps.tag.outputs.tag }}-cypress11-amd64 --amend kubeshop/testkube-cypress-executor:${{ steps.tag.outputs.tag }}-cypress11-arm64v8
          docker manifest push -p kubeshop/testkube-cypress-executor:latest

          docker manifest create kubeshop/testkube-cypress-executor:legacy --amend kubeshop/testkube-cypress-executor:${{ steps.tag.outputs.tag }}-npm-amd64 --amend kubeshop/testkube-cypress-executor:${{ steps.tag.outputs.tag }}-npm-arm64v8
          docker manifest push -p kubeshop/testkube-cypress-executor:legacy


    executor_playwright:
      runs-on: ubuntu-latest
      steps:
      -  name: Checkout
         uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Go Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      -
        name: Docker Cache
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      -
        name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Release
        uses: goreleaser/goreleaser-action@v4
        with:
          distribution: goreleaser
          version: latest
          args: release -f goreleaser_files/.goreleaser-docker-build-executor-playwright.yml
        env:
          GITHUB_TOKEN: ${{ secrets.CI_BOT_TOKEN }}
